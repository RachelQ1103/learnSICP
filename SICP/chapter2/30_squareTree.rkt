(define (square x)
  (* x x))
(define (square-tree tree)
  (cond ((null? tree) '())
         ((not (pair? tree)) (square tree))
         (else (cons (square-tree (car tree))
                     (square-tree (cdr tree))))))

(define (map-square-tree tree)
  (map (lambda (subtree)
         (if (not (pair? subtree))
             (square subtree)
             (map-square-tree subtree))) tree))